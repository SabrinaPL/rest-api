name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

  # postman-tests:
  #   runs-on: ubuntu-latest
  #   needs: build  # Run this job only if the build job succeeds
  #
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v3
  #
  #     - name: Set up Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: '16'
  #
  #     - name: Install Newman  
  #       run: |
  #         npm install -g newman
  #
  #     - name: Run Postman Tests
  #       run: newman run tests/postman/postman_collection.json --reporters cli

  docker:
    runs-on: ubuntu-latest
    needs: build  # Run this job only if the build job succeeds

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/rest-api:latest

  deploy:
    runs-on: ubuntu-latest
    needs: docker  # Run this job only if the docker job succeeds

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh

      - name: Verify Heroku CLI Installation
        run: heroku --version

      - name: Log in to Heroku Container Registry
        run: |
          echo ${{ secrets.HEROKU_API_KEY }} | docker login --username=_ --password-stdin registry.heroku.com

      - name: Verify Docker Image Exists
        run: docker images

      - name: Pull Docker Image from Docker Hub
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/rest-api:latest

      - name: Tag Docker Image for Heroku
        run: |
          docker tag ${{ secrets.DOCKER_USERNAME }}/rest-api:latest registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web

      - name: Push Docker Image to Heroku
        run: |
          docker push registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web

      - name: Release the App on Heroku
        run: |
          heroku restart --app ${{ secrets.HEROKU_APP_NAME }}
